definitions:
  dto.AddBook:
    properties:
      author_id:
        minimum: 1
        type: integer
      category:
        type: string
      pages:
        items:
          $ref: '#/definitions/dto.CreatePage'
        type: array
      title:
        type: string
      year:
        type: integer
    required:
    - author_id
    - category
    - title
    - year
    type: object
  dto.CreateAuthor:
    properties:
      fullname:
        type: string
    required:
    - fullname
    type: object
  dto.CreatePage:
    properties:
      content:
        type: string
      number:
        type: integer
    required:
    - content
    - number
    type: object
  dto.ListedBook:
    properties:
      category:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
  dto.ListedBooks:
    properties:
      author_id:
        type: integer
      books:
        items:
          $ref: '#/definitions/dto.ListedBook'
        type: array
      fullname:
        type: string
    type: object
  model.Author:
    properties:
      books:
        items:
          $ref: '#/definitions/model.Book'
        type: array
      created_at:
        type: string
      fullname:
        type: string
      id:
        type: integer
    type: object
  model.Book:
    properties:
      author_id:
        type: integer
      category:
        type: string
      created_at:
        type: string
      id:
        type: integer
      title:
        type: string
      year:
        type: integer
    type: object
  model.Page:
    properties:
      book_id:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      number:
        type: integer
    type: object
info:
  contact: {}
paths:
  /catalog/authors:
    post:
      description: Adds a new author
      parameters:
      - description: Author info
        in: body
        name: author
        required: true
        schema:
          $ref: '#/definitions/dto.CreateAuthor'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Author'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new author
      tags:
      - catalog
  /catalog/authors/{authorID}:
    delete:
      description: Deletes an author by ID
      parameters:
      - description: Author ID
        in: path
        name: authorID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete an author
      tags:
      - catalog
  /catalog/authors/{authorID}/books:
    get:
      description: Returns all books for the given author
      parameters:
      - description: Author ID
        in: path
        name: authorID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ListedBooks'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get books by author ID
      tags:
      - catalog
  /catalog/books:
    post:
      description: Creates a new book entry
      parameters:
      - description: Book info
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/dto.AddBook'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Add a new book
      tags:
      - catalog
  /catalog/books/{bookID}:
    delete:
      description: Deletes a book by ID
      parameters:
      - description: Book ID
        in: path
        name: bookID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Delete a book
      tags:
      - catalog
    get:
      description: Returns content of a specific book page
      parameters:
      - description: Book ID
        in: path
        name: bookID
        required: true
        type: integer
      - description: Page number
        in: query
        name: pageNumber
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Page'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get a book page
      tags:
      - catalog
  /catalog/books/new:
    get:
      description: Returns list of recently added books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ListedBooks'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get new books
      tags:
      - catalog
  /catalog/books/popular:
    get:
      description: Returns list of most popular books
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ListedBooks'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get popular books
      tags:
      - catalog
  /catalog/books/preview/{bookID}:
    get:
      description: Returns preview information for a book
      parameters:
      - description: Book ID
        in: path
        name: bookID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Book'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Preview a book
      tags:
      - catalog
  /catalog/books/search:
    get:
      description: Search books by author name and/or title with pagination
      parameters:
      - description: Author name
        in: query
        name: author
        type: string
      - description: Book title
        in: query
        name: title
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: count
        type: integer
      - description: Sort field
        in: query
        name: sort
        type: string
      - description: Sort order (asc/desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ListedBooks'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Search books
      tags:
      - catalog
  /catalog/books/views/{bookID}:
    get:
      description: Returns total number of views
      parameters:
      - description: Book ID
        in: path
        name: bookID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: integer
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get views count for a book
      tags:
      - catalog
  /catalog/categories:
    get:
      description: Returns a list of all available book categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all book categories
      tags:
      - catalog
  /catalog/categories/{categoryName}/books:
    get:
      description: Returns paginated list of books for the given category
      parameters:
      - description: Category name
        in: path
        name: categoryName
        required: true
        type: string
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: count
        type: integer
      - description: Sort field
        in: query
        name: sort
        type: string
      - description: Sort order (asc/desc)
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ListedBooks'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List books by category
      tags:
      - catalog
swagger: "2.0"
