services:
  api-gateway:
    container_name: "api-gateway"
    build: ./api-gateway
    env_file:
      - ./.env
    environment:
      SERVER_PORT: 80
    ports:
      - "80:80"
    volumes:
      - ./api-gateway:/app
    networks:
      - e-commerce-backend

  postgres-user:
    container_name: "postgres-user"
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d db"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5433:5432"
    volumes:
      - postgres-user-data:/var/lib/postgresql/data
    networks:
      - e-commerce-backend

  user-service:
    container_name: "user-service"
    build: ./user-service
    depends_on:
      postgres-user:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      SERVER_PORT: 8081
      POSTGRES_URL: postgres://root:password@postgres-user:5432/db?sslmode=disable
    volumes:
      - ./user-service:/app
    networks:
      - e-commerce-backend

  postgres-catalog:
    container_name: "postgres-catalog"
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d db"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "5434:5432"
    volumes:
      - postgres-catalog-data:/var/lib/postgresql/data
    networks:
      - e-commerce-backend

  catalog-service:
    container_name: "catalog-service"
    build: ./catalog-service
    depends_on:
      postgres-catalog:
        condition: service_healthy
    env_file:
      - ./.env
    environment:
      SERVER_PORT: 8082
      POSTGRES_URL: postgres://root:password@postgres-catalog:5432/db?sslmode=disable
    volumes:
      - ./catalog-service:/app
    networks:
      - e-commerce-backend

networks:
  e-commerce-backend:
    driver: bridge

volumes:
  postgres-user-data:
  postgres-catalog-data:
