definitions:
  dto.SignInUser:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.SignUpUser:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 5
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_admin:
        type: boolean
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /emails:
    get:
      description: Returns a list of emails for given user IDs
      parameters:
      - collectionFormat: csv
        description: User IDs
        in: query
        items:
          type: integer
        name: ids
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get emails by user IDs
      tags:
      - internal
  /me:
    get:
      description: Returns info about the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.User'
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get current user info
      tags:
      - user
  /sign-in:
    post:
      consumes:
      - application/json
      description: Authorize existings user
      parameters:
      - description: Sign in data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.SignInUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authorize user
      tags:
      - user
  /sign-up:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: Sign up data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/dto.SignUpUser'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register new user
      tags:
      - user
swagger: "2.0"
